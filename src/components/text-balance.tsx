import { useEffect, useState } from "react";
import { useTranslation } from "react-i18next";

const TextBalance = () => {
  const [balance, setBalance] = useState(0);
  const [fetched, setFetched] = useState(false);
  const [user, setUser] = useState<string | null>(null);
  const { t } = useTranslation();

  // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º tgUser –∏–∑ sessionStorage –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
  useEffect(() => {
    const stored = sessionStorage.getItem("tgUser");
    if (!stored) {
      alert("‚ùå tgUser –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ sessionStorage");
    } else {
      try {
        const decoded = atob(stored);
        alert("‚úÖ tgUser –Ω–∞–π–¥–µ–Ω:\n" + decoded);
        setUser(stored);
      } catch (err) {
        alert("‚ùå tgUser –Ω–∞–π–¥–µ–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å");
      }
    }
  }, []);

  // 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –±–∞–ª–∞–Ω—Å
  useEffect(() => {
    if (!user) return;

    try {
      alert("üì° –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å...");
      fetch(import.meta.env.VITE_API_URL + "/api/balance/", {
        headers: {
          "X-User-ID": user,
        },
      })
        .then((response) => response.json())
        .then((data) => {
          if (data && typeof data.balance !== "undefined") {
            setBalance(data.balance);
            setFetched(true);
            alert("‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–µ–Ω: " + data.balance + " so'm");
          } else {
            alert("‚ö†Ô∏è –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –±–µ–∑ –±–∞–ª–∞–Ω—Å–∞:\n" + JSON.stringify(data));
          }
        })
        .catch((err) => {
          alert("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:\n" + err.message);
          alert("üåê API_URL = " + import.meta.env.VITE_API_URL);
        });
    } catch (err) {
      alert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞");
    }
    
  }, [user]);

  // 3. UI
  return fetched ? (
    <p className="text-[#8c8b5f] text-base font-normal leading-normal capitalize">
      {t("balance")}: {balance} so'm
    </p>
  ) : (
    <p className="text-[#8c8b5f] text-base font-normal leading-normal h-5 w-12 animate-pulse">
      {/* –ò–¥—ë—Ç –∑–∞–≥—Ä—É–∑–∫–∞ */}
    </p>
  );
};

export default TextBalance;
