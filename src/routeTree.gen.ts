/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as GamesRouteImport } from './routes/games'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ReplenishIndexRouteImport } from './routes/replenish/index'
import { Route as ReplenishVerifyRouteImport } from './routes/replenish/verify'
import { Route as GameGameSlugIndexRouteImport } from './routes/game/$gameSlug/index'
import { Route as GameGameSlugCheckoutRouteImport } from './routes/game/$gameSlug/checkout'

const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const GamesRoute = GamesRouteImport.update({
  id: '/games',
  path: '/games',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReplenishIndexRoute = ReplenishIndexRouteImport.update({
  id: '/replenish/',
  path: '/replenish/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReplenishVerifyRoute = ReplenishVerifyRouteImport.update({
  id: '/replenish/verify',
  path: '/replenish/verify',
  getParentRoute: () => rootRouteImport,
} as any)
const GameGameSlugIndexRoute = GameGameSlugIndexRouteImport.update({
  id: '/game/$gameSlug/',
  path: '/game/$gameSlug/',
  getParentRoute: () => rootRouteImport,
} as any)
const GameGameSlugCheckoutRoute = GameGameSlugCheckoutRouteImport.update({
  id: '/game/$gameSlug/checkout',
  path: '/game/$gameSlug/checkout',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/games': typeof GamesRoute
  '/profile': typeof ProfileRoute
  '/replenish/verify': typeof ReplenishVerifyRoute
  '/replenish': typeof ReplenishIndexRoute
  '/game/$gameSlug/checkout': typeof GameGameSlugCheckoutRoute
  '/game/$gameSlug': typeof GameGameSlugIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/games': typeof GamesRoute
  '/profile': typeof ProfileRoute
  '/replenish/verify': typeof ReplenishVerifyRoute
  '/replenish': typeof ReplenishIndexRoute
  '/game/$gameSlug/checkout': typeof GameGameSlugCheckoutRoute
  '/game/$gameSlug': typeof GameGameSlugIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/games': typeof GamesRoute
  '/profile': typeof ProfileRoute
  '/replenish/verify': typeof ReplenishVerifyRoute
  '/replenish/': typeof ReplenishIndexRoute
  '/game/$gameSlug/checkout': typeof GameGameSlugCheckoutRoute
  '/game/$gameSlug/': typeof GameGameSlugIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/games'
    | '/profile'
    | '/replenish/verify'
    | '/replenish'
    | '/game/$gameSlug/checkout'
    | '/game/$gameSlug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/games'
    | '/profile'
    | '/replenish/verify'
    | '/replenish'
    | '/game/$gameSlug/checkout'
    | '/game/$gameSlug'
  id:
    | '__root__'
    | '/'
    | '/games'
    | '/profile'
    | '/replenish/verify'
    | '/replenish/'
    | '/game/$gameSlug/checkout'
    | '/game/$gameSlug/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GamesRoute: typeof GamesRoute
  ProfileRoute: typeof ProfileRoute
  ReplenishVerifyRoute: typeof ReplenishVerifyRoute
  ReplenishIndexRoute: typeof ReplenishIndexRoute
  GameGameSlugCheckoutRoute: typeof GameGameSlugCheckoutRoute
  GameGameSlugIndexRoute: typeof GameGameSlugIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games': {
      id: '/games'
      path: '/games'
      fullPath: '/games'
      preLoaderRoute: typeof GamesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/replenish/': {
      id: '/replenish/'
      path: '/replenish'
      fullPath: '/replenish'
      preLoaderRoute: typeof ReplenishIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/replenish/verify': {
      id: '/replenish/verify'
      path: '/replenish/verify'
      fullPath: '/replenish/verify'
      preLoaderRoute: typeof ReplenishVerifyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game/$gameSlug/': {
      id: '/game/$gameSlug/'
      path: '/game/$gameSlug'
      fullPath: '/game/$gameSlug'
      preLoaderRoute: typeof GameGameSlugIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game/$gameSlug/checkout': {
      id: '/game/$gameSlug/checkout'
      path: '/game/$gameSlug/checkout'
      fullPath: '/game/$gameSlug/checkout'
      preLoaderRoute: typeof GameGameSlugCheckoutRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GamesRoute: GamesRoute,
  ProfileRoute: ProfileRoute,
  ReplenishVerifyRoute: ReplenishVerifyRoute,
  ReplenishIndexRoute: ReplenishIndexRoute,
  GameGameSlugCheckoutRoute: GameGameSlugCheckoutRoute,
  GameGameSlugIndexRoute: GameGameSlugIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
